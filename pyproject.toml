[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"

[project]
name = "aiogram-sentinel"
version = "0.1.0"
description = "Edge hygiene library for aiogram v3 with middlewares, router, and storage backends"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "aiogram-sentinel contributors"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications :: Chat",
]
requires-python = ">=3.10"
dependencies = [
    "aiogram>=3.0.0",
    "redis>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pyright>=1.1.0",
    "ruff>=0.1.0",
]
redis = [
    "redis>=5.0",
]

[project.urls]
Homepage = "https://github.com/aiogram-sentinel/aiogram-sentinel"
Repository = "https://github.com/aiogram-sentinel/aiogram-sentinel"
Issues = "https://github.com/aiogram-sentinel/aiogram-sentinel/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/aiogram_sentinel"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aiogram_sentinel"]

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true
strictReturn = true
strictVariableTypes = true
strictTypeChecking = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "perf: Performance tests", 
    "integration: Integration tests",
    "slow: Slow tests",
    "asyncio: Async tests",
]

[dependency-groups]
dev = [
    "pyright>=1.1.405",
]
