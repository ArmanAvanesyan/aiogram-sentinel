name: Release

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
      force_release:
        description: 'Force release even if no changes detected'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.8.0"

      - name: Install dependencies
        run: |
          uv sync --all-extras --all-groups
          uv add build twine

      - name: Run quality checks
        if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/')
        run: |
          uv run ruff check .
          uv run pyright
          uv run pytest tests/unit/

      - name: Semantic Release (Auto)
        if: github.event.inputs.version_type == 'auto' && (github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/'))
        run: |
          uv run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package for tag release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          uv run python -m build

      - name: Check package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          uv run twine check dist/*

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

      - name: Create GitHub Release from Tag
        id: create_release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            
            Initial release of aiogram-sentinel with core features:
            - Rate limiting middleware
            - Debouncing middleware
            - Authentication middleware
            - Blocking middleware
            - Memory and Redis storage backends
            - Comprehensive documentation and CI/CD
          draft: false
          prerelease: false

      - name: Upload release assets
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/
          asset_name: dist
          asset_content_type: application/zip

      - name: Semantic Release (Manual - Patch)
        if: github.event.inputs.version_type == 'patch' && (github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/'))
        run: |
          uv run semantic-release version --patch
          uv run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Semantic Release (Manual - Minor)
        if: github.event.inputs.version_type == 'minor' && (github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/'))
        run: |
          uv run semantic-release version --minor
          uv run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Semantic Release (Manual - Major)
        if: github.event.inputs.version_type == 'major' && (github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/'))
        run: |
          uv run semantic-release version --major
          uv run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Force Release
        if: github.event.inputs.force_release == 'true' && (github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/'))
        run: |
          uv run semantic-release publish --force
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
